/*! jquery-github-repo - v0.2.0 - 2014-02-02
* https://github.com/bpaulin/jquery-github-repo
* Copyright (c) 2014 Bruno Paulin; Licensed MIT */
(function(){jQuery(function(){return $.githubRepo=function(a,b){var c;return c="",this.settings={},this.$element=$(a),this.setState=function(a){return c=a},this.getState=function(){return c},this.getSetting=function(a){return this.settings[a]},this.callSettingFunction=function(a,b){return null==b&&(b=[]),this.settings[a].apply(this,b)},this.formatDate=function(a){var b;return b=new Date(a),("0"+b.getDate()).slice(-2)+"-"+("0"+(b.getMonth()+1)).slice(-2)+"-"+b.getFullYear()},this.coderwall=function(){var a,b,c;return this.$element.find("div.badges").length>0?a=this.$element.find("div.badges"):(a=$("<div>").addClass("badges"),this.$element.append(a)),c="http://www.coderwall.com/"+this.settings.user+".json",this.settings.coderwallForceJson&&(c=this.settings.coderwallForceJson),b=this,$.ajax(c,{success:function(c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s;for(e=c.badges.slice(0),q=c.badges,i=0,m=q.length;m>i;i++){for(f=q[i],h=new Array,r=c.badges,j=0,n=r.length;n>j;j++)d=r[j],-1!==d.name.indexOf(f.name)&&h.push(d);if(h.length>1)for(k=0,o=h.length;o>k;k++)g=h[k],h.indexOf(g)!==h.length-1&&e.splice(e.indexOf(g),1)}for(s=[],l=0,p=e.length;p>l;l++)f=e[l],s.push(a.append('<div class="cw-badge row"\n  data-badge-name="'+f.name+'">\n  <div class="col-sm-1 col-xs-2">\n    <img src="'+f.badge+'"\n      alt="'+f.name+'"\n      class="img-responsive"\n      style="margin-top:20px"/>\n  </div>\n  <div class="col-sm-11 col-xs-10">\n    <h3 class="name">\n      '+f.name+'\n      <small class="created">'+b.formatDate(f.created)+'</small>\n    </h3>\n    <p class="description">'+f.description+"</p>\n  </div>\n</div>"));return s}})},this.github=function(){var a,b,c,d;return this.$element.find("div.repositories").length>0?a=this.$element.find("div.repositories")[0]:(a=$("<div>").addClass("repositories"),this.$element.append(a)),d="https://api.github.com/users/"+this.settings.user+"/repos",this.settings.githubForceJson&&(d=this.settings.githubForceJson),b=this.settings,c=this,$.ajax(d,{success:function(d){var e,f,g,h,i,j,k,l,m;for(m=[],k=0,l=d.length;l>k;k++){if(f=d[k],e="[data-github-full-name='"+f.full_name+"']",$(a).find(e).length>0)j=$(a).find(e)[0];else{if(!b.allGithubRepos)break;j=$("<div>").addClass("repository"),$(a).append(j)}h=$(j).contents(),$(j).empty(),i=c.formatDate(f.pushed_at),g=f.fork?'<span class="label label-warning">fork</span>':"",$(j).addClass("panel panel-default").attr("data-github-id",f.id).attr("data-github-full-name",f.full_name).append('<div class="panel-heading">\n  <strong>\n    <a href="'+f.owner.html_url+'" class="owner">\n      '+f.owner.login+'</a> /\n    <a href="'+f.html_url+'" class="name">\n      '+f.name+'</a>\n  </strong>\n  <div class="pull-right btn-group btn-group-xs">\n    <a href="'+f.html_url+'/watchers"\n        class="btn btn-default watchers">\n      <i class="fa fa-eye"></i> '+f.watchers+'\n    </a>\n    <a href="'+f.html_url+'/forks" class="btn btn-default forks">\n      <i class="fa fa-code-fork"></i> '+f.forks+'\n    </a>\n  </div>\n  <div class="spacer" style="clear: both;"></div>\n</div>\n<div class="panel-body">\n  <div class="description">'+f.description+'</div>\n</div>\n<div class="panel-footer">\n  '+g+'\n  <span class="label label-primary language">\n    '+f.language+'\n  </span>\n  <div class="pull-right">\n    <small>\n      Dernier commit sur\n      <strong class="default_branch">'+f.default_branch+'</strong>\n      le <span class="pushed_at">'+i+'</pushed_at>\n    </small>\n    <a href="'+f.html_url+'/archive/master.zip"\n        class="archive btn btn-default btn-xs">\n      <i class="fa fa-download"></i>\n    </a>\n  </div>\n</div>'),m.push($(j).children(".panel-body").append(h))}return m}})},this.init=function(){var a;return this.settings=$.extend({},this.defaults,b),a=this.settings,this.settings.github&&this.github(),this.settings.coderwall&&this.coderwall(),this.setState("ready")},this.init(),this},$.githubRepo.prototype.defaults={user:"user",github:!0,githubForceJson:!1,allGithubRepos:!0,coderwall:!0,coderwallForceJson:!1},$.fn.githubRepo=function(a){return this.each(function(){var b;return void 0===$(this).data("githubRepo")?(b=new $.githubRepo(this,a),$(this).data("githubRepo",b)):void 0})}})}).call(this);